function success = runGUISDAPpuhti(gfd_str,dirname)
%
% success = runGUISDAPpuhti(gfdstr)
%
% A simple function for starting a guisdap instance in puhti.csc.fi
%
% This function is run on puhti, there is another function that generates the calls in the local machine. 
%
% IV 2022
%
    
    % create the output directory and writet the gfd file there
    if ~exist(dirname,'dir')
        mkdir(dirname);
    end
    fname = string([tempname(dirname),'.m']);
    fid = fopen(fname,'w');
    for iline = 1:length(gfd_str)
        fprintf(fid,"%s\n",gfd_str(iline));
    end
    fclose(fid);

    %
    % we should somehow run start_GUP here, but it contains a clear all
    % there might be a hint about how to avoid problems in EISCAT_hdf5.m...
    %
    %

    % path settings (temporary, hard-coded test version)
    addpath('/usr/local/guisdap9/anal')
    addpath('/usr/local/guisdap9/irbem')
    addpath('/home/ilkkav/Packages/MATLAB/BAFIM')

    % this should be a modified version of start_GUP with clear all commented out from the beginning.
    start_GUP

    % the attemp below was too complicated
    %
    % an alternative would be to automatically write somewhere a modified version of start_GUP.m...
    %
    %
    % sglines = readlines('start_GUP.m');
    % for k=1:length(sglines)  
    %     tstr = char(sglines(k)); 
    %     icomment = strfind(tstr,'%');
    %     if any(icomment)
    %         tstr(icomment:end)=' ';
    %     end
    %     if length(tstr)>=9       
    %         if tstr(1:9)=='clear all'
    %             tstr = '';
    %         end
    %     end
    %     sglines(k) = [tstr ';'];
    % end

    % disp(strjoin(sglines))
    % eval(strjoin(sglines))
    
    % start the analysis
    go_on(char(fname));

    

end